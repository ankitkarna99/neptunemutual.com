/* ----------------------------------------- */
// Do not edit this file
/* ----------------------------------------- */

import { chunk } from '../../../util/chunk'
import { env } from '../../../util/env'
import { downloadFile } from './downloader'

const chunkFetch = async (files: FileDownloadArgs[]): Promise<void> => {
  const CHUNK_SIZE = parseInt(env('CHUNK_SIZE', '20'))
  console.log('Creating a download chunk of %d files', CHUNK_SIZE)
  const tasks = []

  for (const file of files) {
    tasks.push({ fn: downloadFile, file })
  }

  const chunks = chunk(tasks, CHUNK_SIZE)
  console.log('Total download chunks: %d', chunks.length)

  for (let i = 0; i < chunks.length; i++) {
    console.log('Downloading batch #%d', i)

    const promises = chunks[i].map(x => x.fn(x.file))
    await Promise.allSettled(promises)
  }
}

export { chunkFetch }
