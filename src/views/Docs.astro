---
import { parseContent } from "../../util/content-viewer";
import { normalize } from "../../util/css-class";
import { slugify } from "../../util/slug";
import * as processor from "../../util/html-processor";
import Input from "../elements/Input.astro";
import Icon from "../elements/Icon.astro";
import Breadcrumb from "../elements/Breadcrumb.astro";

interface Props {
  items: Documentation[];
  page: Documentation;
  slug: string;
}

const { items, page, slug: pageSlug } = Astro.props;
const html = await processor.process(page.html);

const breadcrumbs = [
  {
    name: "Docs",
    link: "/docs",
  },
  page.parent && {
    name: page.parent.navigationLabel,
    link: "/docs/" + page.parent.slug,
  },
  {
    name: page.title,
    link: pageSlug,
  },
].filter(Boolean);
---

<div class="documentation container">
  <div class="full width container">
    <div class="ui sidebar menu">
      {
        items.map((item) => {
          const itemSlug = item.parent
            ? `${item.parent.slug}/${item.slug}`
            : item.slug;

          return item.unlinked ? (
            <div
              class={normalize(
                `${itemSlug === pageSlug ? "current" : ""} header item`
              )}
            >
              {item.navigationLabel}
            </div>
          ) : (
            <a
              class={normalize(
                `${itemSlug === pageSlug ? "current" : ""} item`
              )}
              href={`/docs/${itemSlug}/`}
            >
              {item.navigationLabel}
            </a>
          );
        })
      }
    </div>

    <div class="story container">
      <div class="meta">
        <Breadcrumb items={breadcrumbs} />
        <div class="script only search">
          <Input
            type={"search"}
            id="SearchInputSearch"
            placeholder="Search ..."
          />
        </div>
      </div>
      <div class="story">
        <h1 class="ui header" id={slugify(page.title)}>
          <div class="title">{page.title}</div>
          {page.subtitle && <div class="sub title">{page.subtitle}</div>}
        </h1>
        <div class="content" set:html={html} />
      </div>
    </div>
  </div>
</div>

<div class="initially hidden dimmer">
  <div class="ui search modal">
    <div class="search header input">
      <Icon size={"xl"} variant={"search-lg"} />
      <input
        type="search"
        placeholder="Search the Documentation"
        id="ModalSearchInputSearch"
      />
    </div>

    <div class="search result"></div>
  </div>
</div>
