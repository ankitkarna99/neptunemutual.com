---
import Breadcrumb from "../../elements/Breadcrumb.astro";
import Button from "../../elements/buttons/Button.astro";
import Icon from "../../elements/Icon.astro";

interface Props {
  shortTitle: string;
}

const { shortTitle } = Astro.props;

const title = "Convert " + shortTitle.split("Bytes32").join("Solidity Bytes32");

const [from, to] = shortTitle.split(" to ");

const items = [
  {
    link: "/",
    name: "Home",
  },
  {
    link: "/web3-tools",
    name: "Web3 Tools",
  },
  {
    link: `#`,
    name: shortTitle,
  },
];

const exampleInputs: Record<string, string> = {
  String: "Example: foobar",
  Number: "Example: 123.456",
  Bytes32: "Example: 0x7465737400000000000000000000000000000000000000000000000",
};

const exampleResults: Record<string, string> = {
  String: "foobar",
  Number: "123.456",
  Bytes32: "0x",
};

const toBytes32 = to === "Bytes32";
const currentOption = (toBytes32 ? from : to).toLowerCase();

const switchLink = `/web3-tools/${to.toLowerCase()}-to-${from.toLowerCase()}-converter/`;

const getOptionLink = (option: "string" | "number") => {
  if (currentOption === option) {
    return "#";
  }

  if (toBytes32) {
    return `/web3-tools/${option}-to-${to.toLowerCase()}-converter/`;
  } else {
    return `/web3-tools/${from.toLowerCase()}-to-${option}-converter/`;
  }
};
---

<div class="web3 tools full width container">
  <div class="left container">
    <div class="desktop header">
      <Breadcrumb items={items} />
      <div class="title container">
        <h2>{title}</h2>
        <div class="button container">
          <a href={switchLink}>
            <Button>
              <Icon variant="switch-horizontal-02" />
              {to} to {from}
            </Button>
          </a>
        </div>
      </div>
    </div>
    <form>
      <div class="inputs">
        <div>
          <label for="input">Enter Your {from} Value</label>
          <div class="input container">
            <input
              pattern={from === "Bytes32"
                ? `^0x[0-9A-Fa-f]{${to === "String" ? "64" : "1,"}}$`
                : from === "String"
                ? ".{0,31}"
                : undefined}
              title={from === "Bytes32"
                ? "Please input a valid bytes32 string"
                : undefined}
              type="text"
              id="input"
              placeholder={exampleInputs[from]}
              required={false}
            />
            <button
              type="button"
              class="help icon"
              data-tooltip={`Enter value in ${from.toLowerCase()} to convert into ${to.toLowerCase()}`}
            >
              <svg
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
              >
                <path
                  d="M9.09 9C9.3251 8.33167 9.78915 7.76811 10.4 7.40913C11.0108 7.05016 11.7289 6.91894 12.4272 7.03871C13.1255 7.15849 13.7588 7.52152 14.2151 8.06353C14.6713 8.60553 14.9211 9.29152 14.92 10C14.92 12 11.92 13 11.92 13M12 17H12.01M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"></path>
              </svg>
            </button>
          </div>
        </div>
        <div>
          <label for="result">Result</label>
          <div class="input container">
            <textarea
              id="result"
              disabled
              placeholder={exampleResults[to]}
              required={false}></textarea>

            <div class="copy button container">
              <Button type="button" disabled>
                <Icon variant="copy-01" /> Copy Result
              </Button>
            </div>

            <div class="copied button container">
              <Button type="button">
                <Icon variant="check" /> Copied
              </Button>
            </div>
          </div>
        </div>
      </div>
    </form>

    <div class="button container mobile only visible">
      <a href={switchLink}>
        <Button type="button">
          <Icon variant="switch-horizontal-02" /> Bytes32 to String
        </Button>
      </a>
    </div>
  </div>
  <div class="right container">
    <div class="option container">
      <legend>Options</legend>
      <div class="sub legend">
        Convert Values {toBytes32 ? "From" : "To"}
      </div>
      <div class="options">
        <a href={getOptionLink("string")}>
          <div class="option">
            <input
              type="radio"
              name="option_type"
              id="string-radio"
              value="string"
              checked={currentOption === "string"}
            />
            <label for="string-radio">String</label>
          </div>
        </a>
        <a href={getOptionLink("number")}>
          <div class="option">
            <input
              type="radio"
              name="option_type"
              id="number-radio"
              value="number"
              checked={currentOption === "number"}
            />
            <label for="number-radio">Number</label>
          </div>
        </a>
      </div>
      {
        from === "String" && toBytes32 && (
          <button class="padding container">
            <div>
              <p class="padding label">Add Padding</p>
              <p class="padding info">
                Add trailing zeros to fill up the entire storage space
              </p>
            </div>
            <div class="checkbox container">
              <input
                class="checkbox"
                type="checkbox"
                id="padding-switch"
                checked
              />

              <label for="padding-switch" class="ml-3 align-middle">
                Add Padding Checkbox
              </label>
            </div>
          </button>
        )
      }
    </div>
  </div>

  <div class="mobile header">
    <Breadcrumb items={items} />
    <h2>{title}</h2>
  </div>
</div>

<script></script>
