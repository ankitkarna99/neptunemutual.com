---
import {
  getKeyValuePairFrom,
  domains,
  protocolLabels,
  title,
} from "../../../util/protocol";
import FilterTabs from "../../components/FilterTabs.astro";
import Tabs from "../../components/Tabs.astro";
import InputWithIcon from "../../elements/InputWithIcon.astro";
import Contract from "./Contract.astro";
import { getTabs } from "./data";

interface Props extends ContractProps {}

const { networkId, type, data } = Astro.props;

const iterable =
  type === "cxTokens" ? getKeyValuePairFrom(data[type]) : data[type];
const convertBytes32 = type === "pods" ? true : false;
---

<div
  class="contract details container"
  data-network={networkId}
  data-type={type}
  data-filter={"active"}
>
  <div class="titles container">
    <h1>{title[networkId]}</h1>
    <a href={domains[networkId]} target="_blank">
      {domains[networkId]}
    </a>
  </div>

  <Tabs items={getTabs(networkId, type)} />

  <p class="details title">
    {protocolLabels[type]}
  </p>

  <InputWithIcon
    className="search input"
    iconProps={{
      variant: "search-lg",
      size: "lg",
    }}
    placeholder="Search"
    value=""
  />

  {
    type === "cxTokens" && (
      <FilterTabs className={"cxToken contract"} cxTokens={data.cxTokens} />
    )
  }

  <div class="ui contracts list view">
    {
      iterable.map((item) => (
        <Contract
          contract={item}
          networkId={networkId}
          convertBytes32={convertBytes32}
        />
      ))
    }
  </div>
</div>
