---
import { getKeyValuePairFrom } from "../../../util/protocol";
import FilterTabs from "./FilterTabs.astro";
import Tabs from "../../components/Tabs.astro";
import InputWithIcon from "../../elements/InputWithIcon.astro";
import Contract from "./Contract.astro";
import { config, getTabs, Labels } from "../../data/protocol";

interface Props extends ContractProps {}

const { network, type, data } = Astro.props;

const iterable =
  type === "cxTokens" ? getKeyValuePairFrom(data[type]) : data[type];
const convertBytes32 = type === "pods" ? true : false;
---

<div
  class="contract details container"
  data-network={network}
  data-type={type}
  data-filter={"active"}
>
  <div class="titles container">
    <h1>{config[network].title}</h1>
    <a href={config[network].app} target="_blank">
      {config[network].app}
    </a>
  </div>

  <Tabs items={getTabs(network, type)} />

  <p class="details title">
    {Labels[type]}
  </p>

  <InputWithIcon
    className="search input"
    iconProps={{
      variant: "search-lg",
      size: "lg",
    }}
    placeholder="Search"
    value=""
  />

  {
    type === "cxTokens" && (
      <FilterTabs className={"cxToken contract"} cxTokens={data.cxTokens} />
    )
  }

  <div class="ui contracts list view">
    {
      iterable.map((item) => (
        <Contract
          contract={item}
          network={network}
          convertBytes32={convertBytes32}
        />
      ))
    }
  </div>
</div>
